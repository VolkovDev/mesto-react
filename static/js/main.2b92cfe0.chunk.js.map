{"version":3,"sources":["utils/api.js","images/logo_mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","adress","token","_headerResponse","res","ok","json","Promise","reject","status","this","_adress","_token","fetch","method","headers","authorization","then","name","about","body","JSON","stringify","link","_id","isLiked","avatar","Header","className","href","target","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardImageClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","cardDeleteButtonClassName","likes","some","i","cardLikeButtonClassName","onClick","type","id","aria-label","length","Main","props","userName","userDescription","userAvatar","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","PopupWithForm","isOpen","onClose","onSubmit","action","title","children","buttonText","ImagePopup","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","value","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","setLink","App","setCurrentUser","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","getInitialCards","initialCards","catch","err","console","log","getInfoUser","data","handleEscClose","evt","key","document","addEventListener","removeEventListener","Provider","putHandlerLike","newCard","newCards","c","deleteCard","filter","patchEditProfile","postAddNewCard","patchRefreshAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b92cfe0.chunk.js","sourcesContent":["class Api {\r\n  constructor({ adress, token, }) {\r\n    this._adress = adress\r\n    this._token = token\r\n  }\r\n\r\n  _headerResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInfoUser() {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._adress}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  patchEditProfile({name, about}) {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  postAddNewCard({ name, link }) {\r\n    return fetch(`${this._adress}/cards`, {\r\n      method: 'post',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  deleteCard(_id) {\r\n    return fetch(`${this._adress}/cards/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  putHandlerLike(_id, isLiked) {\r\n    if (isLiked) {\r\n      return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n        .then(this._headerResponse)\r\n    } else {\r\n      return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          authorization: this._token,\r\n          'Content-Type': 'application/json'\r\n        },\r\n      })\r\n        .then(this._headerResponse)\r\n}\r\n\r\n    }\r\n\r\n  patchRefreshAvatar({avatar}) {\r\n    return fetch(`${this._adress}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  adress: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  token: 'f72c8d0b-5fc2-4db7-9b50-05d59d520549'\r\n})\r\n\r\nexport default api","export default __webpack_public_path__ + \"static/media/logo_mesto.c2821b38.svg\";","import logo from '../images/logo_mesto.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <header className='header'>\r\n        <a href='https://praktikum.yandex.ru/' className='header__link' target='_blank'><img src={logo} alt='логотип'\r\n          className='header__logo' />\r\n        </a>\r\n      </header>\r\n    </>\r\n  )\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n\r\n","import React from \"react\";\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card({card, onCardClick, onCardImageClick, onCardLike, onCardDelete}) {\r\n  const currentUser  = React.useContext(CurrentUserContext);\r\n  \r\n  function handleClick() {\r\n    onCardClick(card);\r\n    onCardImageClick()\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card)\r\n  }\r\n\r\n\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\nconst isOwn = card.owner._id === currentUser._id;\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\r\nconst cardDeleteButtonClassName = (\r\n  `card__delete-btn ${isOwn ? '' : 'card__delete-btn_non-active'}`\r\n);\r\n\r\n// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\nconst isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\r\nconst cardLikeButtonClassName = (\r\n  `card__like-btn ${ isLiked ? 'card__like-btn_active' : ''}`\r\n);\r\n\r\n  return (\r\n    <>\r\n    {/*  <template id='addCard'> */}\r\n      <article className=\"card\">\r\n        <img \r\n          className=\"card__image\"\r\n          src={\r\n            card.link\r\n            }\r\n          alt={card.name}\r\n          onClick={handleClick} \r\n        />\r\n        <button \r\n          onClick={handleDeleteClick}\r\n          className={cardDeleteButtonClassName}\r\n          type=\"button\"\r\n        ></button>\r\n        <div\r\n          className=\"card__element\"\r\n        >\r\n          <h2\r\n            className=\"card__title\"\r\n          > {\r\n              card.name\r\n            }</h2>\r\n          <div \r\n            className=\"card__like-container\"\r\n          >\r\n            <button\r\n              id=\"likeButton\"\r\n              className={cardLikeButtonClassName}\r\n              aria-label='Поставить лайк'\r\n              type=\"button\"\r\n              onClick={handleLikeClick}\r\n            ></button>\r\n            <div \r\n              className=\"card__like-counter\"\r\n            > {\r\n              card.likes.length ? card.likes.length : '0'\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    {/*  </template> */}\r\n    </>\r\n  );\r\n}\r\nexport default Card","import React, { useState, useEffect } from 'react'\r\nimport Card from './Card'\r\nimport {api} from '../utils/api.js'\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\"\r\n// import avatarDefault from '../images/profile_avatar.jpg'\r\n\r\nfunction Main(props) {\r\n  const currentUser  = React.useContext(CurrentUserContext)\r\n  const userName = currentUser.name\r\n  const userDescription = currentUser.about\r\n  const userAvatar = currentUser.avatar\r\n  // const [userName, setUserName] = useState()\r\n  // const [userDescription, setUserDescription] = useState()\r\n  // const [userAvatar, setUserAvatar] = useState(avatarDefault)\r\n  // const [cards, setCards] = useState([])\r\n\r\n  // useEffect(() => {\r\n  //   api.getInitialCards()\r\n  //     .then(initialCards => {\r\n  //       setCards(initialCards)\r\n  //     })\r\n  //     .catch(err => console.log(err))\r\n  // }, [])\r\n\r\n  // function handleCardLike(card) {\r\n  //   // Снова проверяем, есть ли уже лайк на этой карточке\r\n  //   const isLiked = card.likes.some(i => i._id === currentUser._id)\r\n    \r\n  //   // Отправляем запрос в API и получаем обновлённые данные карточки\r\n  //   api.putHandlerLike(card._id, !isLiked).then((newCard) => {\r\n  //       // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n  //     const newCards = cards.map((c) => c._id === card._id ? newCard : c)\r\n  //     // Обновляем стейт\r\n  //     setCards(newCards)\r\n  //   })\r\n  // }\r\n\r\n  // function handleCardDelete(card) {\r\n  //   api.deleteCard(card._id).then(() => {\r\n  //     const newCards = cards.filter((c) => c._id !== card._id)\r\n  //     setCards(newCards)\r\n  //   })\r\n  // }\r\n  \r\n  // useEffect(() => {\r\n  //   api.getInfoUser()\r\n  //     .then(data => {\r\n  //       setUserName(data.name)\r\n  //       setUserDescription(data.about)\r\n  //       setUserAvatar(data.avatar)\r\n  //     })\r\n  //     .catch(err => console.log(err))\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <main className='content'>\r\n        <section className='profile'>\r\n          <div\r\n            className='profile__avatar-container'\r\n            onClick={props.onEditAvatar}>\r\n            <img\r\n              src={userAvatar} \r\n              alt={userName}\r\n              className='profile__avatar'\r\n            />\r\n          </div>\r\n          <div className='profile__info'>\r\n            <h1 className='profile__name'>{userName}</h1>\r\n            <button\r\n              className='profile__edit-button' \r\n              type='button'\r\n              onClick={props.onEditProfile}\r\n            ></button>\r\n          </div>\r\n          <p className='profile__hobby'>{userDescription}</p>\r\n          <button\r\n            className='profile__add-button'\r\n            type='button'\r\n            onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n        <section className='cards'>\r\n          {props.cards.map((card) => (\r\n              <Card \r\n                key={card._id}\r\n                card={card}\r\n                onCardClick={props.onCardClick}\r\n                onCardImageClick={props.onCardImageClick}\r\n                onCardLike={props.onCardLike}\r\n                onCardDelete={props.onCardDelete}\r\n              />\r\n          ))}\r\n        </section>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\nexport default Main","function Footer() {\r\n  return (\r\n    <>\r\n      <footer className='footer'>\r\n        <a href='https://praktikum.yandex.ru/' className='footer__link'>&copy; 2020 Mesto Russia</a>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\nexport default Footer","function PopupWithForm(props) {\r\n\r\n  return (\r\n    <>\r\n      <div className={props.isOpen ? `pop-up pop-up_type_${props.name} pop-up_opened` : `pop-up pop-up_type_${props.name}`}>\r\n        <div className={`pop-up__container pop-up__container_opened_${props.name}`} >\r\n          <button \r\n            className={`pop-up__btn-close pop-up__btn-close_type_${props.name}`}\r\n            type='button'\r\n            aria-label='Закрыть форму'\r\n            onClick={props.onClose}\r\n          ></button>\r\n          <form \r\n            onSubmit={props.onSubmit}\r\n            name={`${props.name}`} \r\n            action='#' \r\n            className={`pop-up__form pop-up__form_${props.name}`} \r\n            method='POST'\r\n          >\r\n            <h3 className='pop-up__form-title'>{props.title}</h3>\r\n              {props.children}\r\n          <button \r\n            className='pop-up__form-btn-submit pop-up__form-btn-submit_comfirm' \r\n            type='submit'\r\n          >{props.buttonText}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default PopupWithForm","function ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div \r\n        className={\r\n          props.isOpen ? `pop-up pop-up_type_image-zoom pop-up_opened` : `pop-up pop-up_type_image-zoom`\r\n        }\r\n      >\r\n        <div \r\n          className='pop-up__container pop-up__container_opened_image-zoom'\r\n        >\r\n            <button \r\n              className='pop-up__btn-close pop-up__btn-close_type_image-zoom'\r\n              type='button'\r\n              aria-label='Закрыть форму'\r\n              onClick={props.onClose}\r\n            ></button>\r\n            <img className='pop-up__img' src={props.card.link} alt={props.card.name} />\r\n            <div \r\n              className='pop-up__description'\r\n            >\r\n              {props.card.name}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default ImagePopup","import React from 'react'\r\nimport {useState, useEffect, useContext} from 'react'\r\nimport PopupWithForm from './PopupWithForm'\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\"\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n  const currentUser = useContext(CurrentUserContext)\r\n\r\n  const [name, setName] = useState('')\r\n  const [description, setDescription] = useState('')\r\n\r\n  // Обработчик изменения инпута обновляет стейт\r\n  function nameHandleChange(e) {\r\n    setName(e.target.value)\r\n  }\r\n\r\n  // Обработчик изменения инпута обновляет стейт\r\n  function descriptionHandleChange(e) {\r\n    setDescription(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    e.preventDefault()\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    })\r\n  } \r\n\r\n  // После загрузки текущего пользователя из API\r\n// его данные будут использованы в управляемых компонентах.\r\nuseEffect(() => {\r\n  setName(currentUser.name)\r\n  setDescription(currentUser.about)\r\n}, [currentUser]) \r\n\r\n  return (\r\n        <PopupWithForm\r\n          title='Редактировать профиль'\r\n          name='profile'\r\n          onClose={onClose}\r\n          isOpen={isOpen}\r\n          onSubmit={handleSubmit}\r\n          buttonText='Сохранить'\r\n        >\r\n          <input\r\n            value={name}\r\n            onChange={nameHandleChange}\r\n            name='input-name'\r\n            type='text'\r\n            id='name-input'\r\n            className='pop-up__form-input pop-up__form-input_type_name'\r\n            placeholder='Имя Фамилия'\r\n            required\r\n            minLength='2'\r\n            maxLength='40'\r\n            autoComplete='off'\r\n          />\r\n          <span\r\n            className='pop-up__form-input-error'\r\n            id='name-input-error'\r\n          ></span>\r\n\r\n          <input\r\n            value={description}\r\n            onChange={descriptionHandleChange}\r\n            name='input-hobby'\r\n            type='text'\r\n            id='hobby-input'\r\n            className='pop-up__form-input pop-up__form-input_type_hobby'\r\n            placeholder='Хобби'\r\n            required\r\n            minLength='2'\r\n            maxLength='200'\r\n            autoComplete='off'\r\n          />\r\n          <span\r\n            className='pop-up__form-input-error'\r\n            id='hobby-input-error'\r\n          ></span>\r\n        </PopupWithForm>\r\n  )\r\n\r\n}\r\n\r\nexport default EditProfilePopup","import React from 'react'\r\n// import { useContext } from 'react'\r\nimport PopupWithForm from './PopupWithForm'\r\n// import {CurrentUserContext} from \"../contexts/CurrentUserContext\"\r\n\r\nfunction EditAvatarPopup( { isOpen, onClose, onUpdateAvatar }) {\r\n  // const currentUser = useContext(CurrentUserContext)\r\n\r\n  // const [avatar, setAvatar] = useState('')\r\n  const avatarRef = React.useRef()\r\n\r\n  // Обработчик изменения инпута обновляет стейт\r\n  // function avatarHandleChange(e) {\r\n  //   setAvatar(e.target.value)\r\n  // }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n    title='Обновить аватар'\r\n    name='avatar'\r\n    isOpen={isOpen}\r\n    onClose={onClose}\r\n    onSubmit={handleSubmit}\r\n    buttonText='Сохранить'\r\n  >\r\n    <input\r\n      ref={avatarRef}\r\n      name='input-avatar'\r\n      id='avatar-input'\r\n      type='url'\r\n      className='pop-up__form-input pop-up__form-input_type_link-avatar'\r\n      placeholder='Ссылка на картинку'\r\n      required\r\n    />\r\n    <span\r\n      className='pop-up__form-input-error'\r\n      id='avatar-input-error'\r\n    ></span>\r\n\r\n  </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup","import React from 'react'\r\nimport {useState, useEffect, useContext} from 'react'\r\nimport PopupWithForm from './PopupWithForm'\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\"\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }){\r\n  const currentUser = useContext(CurrentUserContext)\r\n\r\n  const [name, setName] = useState('')\r\n  const [link, setLink] = useState('')\r\n\r\n    // Обработчик изменения инпута обновляет стейт\r\n    function nameHandleChange(e) {\r\n      setName(e.target.value)\r\n    }\r\n\r\n    // Обработчик изменения инпута обновляет стейт\r\n    function linkHandleChange(e) {\r\n      setLink(e.target.value)\r\n    }\r\n\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n    onAddPlace({ \r\n      name, \r\n      link \r\n    })\r\n    setName('')\r\n    setLink('')\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n    title='Новое место'\r\n    name='add-card'\r\n    isOpen={isOpen}\r\n    onClose={onClose}\r\n    onSubmit={handleSubmit}\r\n    buttonText='Создать'\r\n  >\r\n    <input\r\n      value={name}\r\n      onChange={nameHandleChange}\r\n      name='input-name-image'\r\n      type='text'\r\n      id='name-image-input'\r\n      className='pop-up__form-input pop-up__form-input_type_image'\r\n      placeholder='Название'\r\n      required\r\n      minLength='2'\r\n      maxLength='30'\r\n      autoComplete='off'\r\n    />\r\n    <span\r\n      className='pop-up__form-input-error'\r\n      id='name-image-input-error'\r\n    ></span>\r\n    <input\r\n      value={link}\r\n      onChange={linkHandleChange}\r\n      name='input-url'\r\n      type='url'\r\n      id='url-input'\r\n      className='pop-up__form-input pop-up__form-input_type_url'\r\n      placeholder='Ссылка на картинку'\r\n      required\r\n      autoComplete='off'\r\n    />\r\n    <span\r\n      className='pop-up__form-input-error'\r\n      id='url-input-error'\r\n    ></span>\r\n\r\n  </PopupWithForm>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import '../index.css'\nimport React, { useState, useEffect } from 'react'\nimport  api  from '../utils/api'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: '',\n    avatar: ''\n  })\n  const [cards, setCards] = useState([])\n  \n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false)\n  const [selectedCard, setSelectedCard] = useState(false)\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleCardImageClick() {\n    setIsImagePopupOpen(true)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }\n\n  function handleUpdateUser({name, about}) {\n    api.patchEditProfile({name, about})\n      .then((data) => {\n        setCurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    api.patchRefreshAvatar({avatar})\n    .then((data) => {\n      setCurrentUser(data)\n      closeAllPopups()\n    })\n    .catch(err => console.log(err))\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsImagePopupOpen(false)\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.putHandlerLike(card._id, !isLiked).then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c)\n      // Обновляем стейт\n      setCards(newCards)\n    })\n    .catch(err => console.log(err))\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id)\n        setCards(newCards)\n      })\n      .catch(err => console.log(err))\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api.postAddNewCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    api.getInitialCards()\n      .then(initialCards => {\n        setCards(initialCards)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    api.getInfoUser()\n      .then(data => {\n        setCurrentUser(data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    function handleEscClose(evt) {\n      return evt.key === 'Escape' ? closeAllPopups() : null\n    }\n\n    if (isEditProfilePopupOpen || isAddPlacePopupOpen || isEditAvatarPopupOpen || isImagePopupOpen) {\n      document.addEventListener('keydown', handleEscClose)\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose)\n    }\n  }, [isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isImagePopupOpen])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n\n        < Header />\n\n        < Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          onCardImageClick={handleCardImageClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n\n        < Footer />\n\n\n        {/* Popup profile */}\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        {/* Popup card */}\n        <AddPlacePopup\n          title='Новое место'\n          name='add-card'\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          buttonText='Создать'\n        />\n\n        {/* Popup avatar */}\n        <EditAvatarPopup \n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups} \n          onUpdateAvatar={handleUpdateAvatar}\n        /> \n\n\n        {/* Popup confirm */}\n        < PopupWithForm\n          title='Вы уверены?'\n          name='confirm'\n          onClose={closeAllPopups}\n          buttonText='Да'\n        >\n\n        </PopupWithForm>\n\n        {/* Popup image */}\n        <ImagePopup\n          onClose={closeAllPopups}\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n        ></ImagePopup>\n\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}