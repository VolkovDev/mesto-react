{"ast":null,"code":"import _classCallCheck from\"C:/Users/\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439/Documents/GitHub/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439/Documents/GitHub/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var adress=_ref.adress,token=_ref.token;_classCallCheck(this,Api);this._headerResponse=function(res){return res.ok?res.json():Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};this._adress=adress;this._token=token;}_createClass(Api,[{key:\"getInfoUser\",value:function getInfoUser(){return fetch(\"\".concat(this._adress,\"/users/me\"),{method:'GET',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._headerResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._adress,\"/cards\"),{headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._headerResponse);}},{key:\"patchEditProfile\",value:function patchEditProfile(name,about){return fetch(\"\".concat(this._adress,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._headerResponse);}},{key:\"postAddNewCard\",value:function postAddNewCard(_ref2){var name=_ref2.name,link=_ref2.link;return fetch(\"\".concat(this._adress,\"/cards\"),{method:'post',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._headerResponse);}},{key:\"deleteCard\",value:function deleteCard(_id){return fetch(\"\".concat(this._adress,\"/cards/\").concat(_id),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._headerResponse);}},{key:\"putHandlerLike\",value:function putHandlerLike(_id){return fetch(\"\".concat(this._adress,\"/cards/likes/\").concat(_id),{method:'PUT',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._headerResponse);}},{key:\"deleteLike\",value:function deleteLike(_id){return fetch(\"\".concat(this._adress,\"/cards/likes/\").concat(_id),{method:'DELETE',headers:{authorization:this._token,'Content-Type':'application/json'}}).then(this._headerResponse);}},{key:\"patchRefreshAvatar\",value:function patchRefreshAvatar(link){return fetch(\"\".concat(this._adress,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:link})}).then(this._headerResponse);}}]);return Api;}();var api=new Api({adress:'https://mesto.nomoreparties.co/v1/cohort-19',token:'f72c8d0b-5fc2-4db7-9b50-05d59d520549'});export default api;","map":{"version":3,"sources":["C:/Users/Андрей/Documents/GitHub/mesto-react/src/utils/Api.js"],"names":["Api","adress","token","_headerResponse","res","ok","json","Promise","reject","status","_adress","_token","fetch","method","headers","authorization","then","name","about","body","JSON","stringify","link","_id","avatar","api"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({ adress, token, }) {\r\n    this._adress = adress\r\n    this._token = token\r\n  }\r\n\r\n  _headerResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInfoUser() {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._adress}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  patchEditProfile(name, about) {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  postAddNewCard({ name, link }) {\r\n    return fetch(`${this._adress}/cards`, {\r\n      method: 'post',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  deleteCard(_id) {\r\n    return fetch(`${this._adress}/cards/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  putHandlerLike(_id) {\r\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  deleteLike(_id) {\r\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  patchRefreshAvatar(link) {\r\n    return fetch(`${this._adress}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  adress: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n  token: 'f72c8d0b-5fc2-4db7-9b50-05d59d520549'\r\n})\r\n\r\nexport default api"]},"metadata":{},"sourceType":"module"}