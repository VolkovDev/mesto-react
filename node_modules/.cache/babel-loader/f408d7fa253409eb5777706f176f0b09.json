{"ast":null,"code":"class Api {\n  constructor({\n    adress,\n    token\n  }) {\n    this._headerResponse = res => {\n      return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n    };\n\n    this._adress = 'https://mesto.nomoreparties.co/v1/cohort-19', this._token = 'f72c8d0b-5fc2-4db7-9b50-05d59d520549';\n  }\n\n  getInfoUser() {\n    return fetch(`${this._adress}/users/me`, {\n      method: 'GET',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._headerResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._adress}/cards`, {\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._headerResponse);\n  }\n\n  patchEditProfile(name, about) {\n    return fetch(`${this._adress}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._headerResponse);\n  }\n\n  postAddNewCard({\n    name,\n    link\n  }) {\n    return fetch(`${this._adress}/cards`, {\n      method: 'post',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._headerResponse);\n  }\n\n  deleteCard(_id) {\n    return fetch(`${this._adress}/cards/${_id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._headerResponse);\n  }\n\n  putHandlerLike(_id) {\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\n      method: 'PUT',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._headerResponse);\n  }\n\n  deleteLike(_id) {\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      }\n    }).then(this._headerResponse);\n  }\n\n  patchRefreshAvatar(link) {\n    return fetch(`${this._adress}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(this._headerResponse);\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["C:/Users/Андрей/Documents/GitHub/mesto-react/src/utils/Api.js"],"names":["Api","constructor","adress","token","_headerResponse","res","ok","json","Promise","reject","status","_adress","_token","getInfoUser","fetch","method","headers","authorization","then","getInitialCards","patchEditProfile","name","about","body","JSON","stringify","postAddNewCard","link","deleteCard","_id","putHandlerLike","deleteLike","patchRefreshAvatar","avatar"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({ adress, token, }) {\r\n    this._adress = 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n    this._token = 'f72c8d0b-5fc2-4db7-9b50-05d59d520549'\r\n  }\r\n\r\n  _headerResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInfoUser() {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._adress}/cards`, {\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  patchEditProfile(name, about) {\r\n    return fetch(`${this._adress}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  postAddNewCard({ name, link }) {\r\n    return fetch(`${this._adress}/cards`, {\r\n      method: 'post',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  deleteCard(_id) {\r\n    return fetch(`${this._adress}/cards/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  putHandlerLike(_id) {\r\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  deleteLike(_id) {\r\n    return fetch(`${this._adress}/cards/likes/${_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n  patchRefreshAvatar(link) {\r\n    return fetch(`${this._adress}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n      .then(this._headerResponse)\r\n  }\r\n\r\n}\r\n\r\nexport default Api"]},"metadata":{},"sourceType":"module"}